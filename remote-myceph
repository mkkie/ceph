#! /bin/bash

cluster_dir="$HOME/my-cluster"
ceph_ser_dir="/var/lib/ceph"

ssh_command(){
ssh -t $USER@$remote_ip $1
}

create_init(){
    case $1 in
	mon)
	    ssh_command "cd $cluster_dir;./myceph create mon"
	    ;;
	osd)
	    ssh_command "sudo fdisk -l"
	    printf "choose one device => "
	    read osd_dev
	    ssh_command "cd $cluster_dir;./myceph create osd $osd_dev"
	    ;;
	mds)
	    ssh_command "cd $cluster_dir;./myceph create mds"
	    ;;
	dir)
	    scp -r $cluster_dir $remote_ip:$cluster_dir
	    ;;
	*)
	    echo "usage: $filename remote-IP create [ mon | osd | mds | dir ]"
	    ;;
    esac
}

delete_ceph(){
    echo "Stop ceph service & delete it."
    printf "Continue (yes/no)? "
    read yn
    case $yn in
	[Yy] | yes)
	    del=1
	    ;;
	[Nn] | no)
	    del=0
	    ;;
	*)
	    printf "Please type 'yes' or 'no': "
	    ;;
    esac
    if [ $del -eq 1 ]
    then ssh_command "sudo service ceph -a stop;sudo umount /dev/vdb;sudo rm -r /etc/ceph $cluster_dir $ceph_ser_dir;sudo cp /etc/fstab.osd.bkp /etc/fstab"
    fi
}

start_function(){
    case $1 in
	mon)
	    ssh_command "sudo service ceph -a start mon"
	    ;;
	osd)
	    ssh_command "sudo service ceph -a start osd"
	    ;;
	mds)
	    ssh_command "sudo service ceph -a start mds"
	    ;;
	all)
	    ssh_command "sudo service ceph -a start"
	    ;;
	*)
	    echo "usage: $filename remote-IP start [ mon | osd | mds | all ]"
	    ;;
    esac
}

stop_function(){
    case $1 in
	mon)
	    ssh_command "sudo service ceph -a stop mon"
	    ;;
	osd)
	    ssh_command "sudo service ceph -a stop osd"
	    ;;
	mds)
	    ssh_command "sudo service ceph -a stop mds"
	    ;;
	all)
	    ssh_command "sudo service ceph -a stop"
	    ;;
	*)
	    echo "usage: $filename remote-IP stop [ mon | osd | mds | all ]"
	    ;;
    esac
}

power_off(){
    ssh_command "sudo service ceph -a stop;sync;sudo init 0"
}

filename=$0
remote_ip=$1
command=$2
para1=$3
para2=$4
test -z $3 && para1=0
test -z $4 && para2=0

case "$command" in
    create)
	create_init $para1 $para2
	;;
    delete)
	delete_ceph $para1 $para2
	;;
    start)
	start_function $para1 $para2
	;;
    stop)
	stop_function $para1 $para2
	;;
    poweroff)
	power_off
	;;
    *)
	echo "usage: $filename remote-IP [ create | delete | start | stop | poweroff ]"
	;;
esac
