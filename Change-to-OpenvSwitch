#!/bin/bash

ifconf=/sbin/ifconfig
route=/sbin/route
ethdev=eth0
brName=br0
ethdev2=eth1
brName2=br1
# choose a ip address, netmask, gateway or leave a blank to detect.
ethdevip=
ethdevip2=
netmask=
gateway=

chk_read(){
    read tmp
    if [ -z $tmp ]
    then echo $1
    else
	echo $tmp
    fi
}

ethdev_select(){
    detect_ethdev
    echo "choose a ethernet card: (default: $ethdev)"
    printf "=> "
    ethdev=$(chk_read $ethdev)
    echo "Type bridge name: (default: $brName)"
    printf "=> "
    brName=$(chk_read $brName)

    get_ethdev_info
}

ethdev_select_2(){
    detect_ethdev
    echo "choose second ethernet card: (default: $ethdev2)"
    printf "=> "
    ethdev2=$(chk_read $ethdev2)
    echo "Type second bridge name: (default: $brName2)"
    printf "=> "
    brName2=$(chk_read $brName2)

    get_ethdev_info_2
}

check_ovs(){
which ovs-vsctl >/dev/null
if [ $? -eq 1 ]
then
    echo "Need to install openvswitch-switch."
    sudo aptitude update
    sudo aptitude install openvswitch-switch
fi
}

get_ethdev_info(){
    # grep ethdev ip address
    if [ -z $ethdevip ]
    then
	ethdevip=$($ifconf $ethdev | grep "inet addr" |\
			  sed 's/^.*addr://g' | sed 's/Bcast.*$//g')
    fi
    # ip address exists?
    if [ -z $ethdevip ]
    then
	echo "No IP address specified or detected."
	echo "EXIT!"
	exit 1
    fi
    # grep ethdev netmask
    netmask=$($ifconf $ethdev | grep "Mask:" |\
		     sed 's/^.*Mask://g')
    # grep ethdev gateway
    gateway=$($route -n | grep $ethdev | grep "UG" | awk '{print $2}')
    
    echo "I got some infomation."
    printf "IP:\t$ethdevip\nMASK:\t$netmask\nGW:\t$gateway\n"
}

get_ethdev_info_2(){
    # grep ethdev ip address
    if [ -z $ethdevip2 ]
    then
	ethdevip2=$($ifconf $ethdev2 | grep "inet addr" |\
			  sed 's/^.*addr://g' | sed 's/Bcast.*$//g')
    fi
    # ip address exists?
    if [ -z $ethdevip2 ]
    then
	echo "No IP address specified or detected."
	echo "EXIT!"
	exit 1
    fi
    # grep ethdev netmask
    netmask=$($ifconf $ethdev2 | grep "Mask:" |\
		     sed 's/^.*Mask://g')
    # grep ethdev gateway
    gateway=$($route -n | grep $ethdev2 | grep "UG" | awk '{print $2}')
    
    echo "I got some infomation."
    printf "IP:\t$ethdevip2\nMASK:\t$netmask\nGW:\t$gateway\n"
}

detect_ethdev(){
    ethdevlist=$($ifconf -a | grep eth | sed 's/Link.*//g')
    for i in $ethdevlist
	do
	    $ifconf $i
	done
}


create_interfaces(){
    interfaces=interfaces
    echo "auto lo" >${interfaces}
    echo "iface lo inet loopback" >>${interfaces}
    echo "" >>${interfaces}
    echo "allow-hotplug $brName" >>${interfaces}
    echo "iface $brName inet static" >>${interfaces}
    echo "    address $ethdevip" >>${interfaces}
    echo "    netmask $netmask" >>${interfaces}
    echo "    gateway $gateway" >>${interfaces}
    echo "" >>${interfaces}
    echo "auto $ethdev" >>${interfaces}
    echo "iface $ethdev inet static" >>${interfaces}
    echo "    address 0.0.0.0" >>${interfaces}
    echo "" >>${interfaces}
}

start_n_stop(){
    start_script=start-openvswitch
    stop_script=stop-openvswitch
    # start script
    echo "#!/bin/bash" >${start_script}
    echo "sudo echo Need SU passwd: " >>${start_script}
    echo "sudo ovs-vsctl add-br $brName 2>/dev/null" >>${start_script}
    echo "sudo ovs-vsctl add-port $brName $ethdev" >>${start_script}
    echo "sudo ifconfig $ethdev 0" >>${start_script}
    echo "sudo ifconfig $brName $ethdevip netmask $netmask" >>${start_script}
    if [ ! -z $gateway ]
    then
	echo "sudo route add default gw $gateway" >>${start_script}
    fi
    # stop script
    echo "#!/bin/bash" >${stop_script}
    echo "sudo echo Need SU passwd: " >>${stop_script}
    echo "sudo ifconfig $brName 0" >>${stop_script}
    echo "sudo ovs-vsctl del-port $ethdev" >>${stop_script}
    echo "sudo ovs-vsctl del-br $brName" >>${stop_script}
    echo "sudo ifconfig $ethdev $ethdevip netmask $netmask" >>${stop_script}
    if [ ! -z $gateway ]
    then
	echo "sudo route add default gw $gateway" >>${stop_script}
    fi
    # changing execute permission
    chmod +x ${start_script} ${stop_script}

    echo "Start & stop scripts created."
}

start_n_stop_2(){
    start_script=start-openvswitch
    stop_script=stop-openvswitch
    # start script
    echo "#!/bin/bash" >${start_script}
    echo "sudo echo Need SU passwd: " >>${start_script}
    echo ""  >>${start_script}
    # stop script
    echo "#!/bin/bash" >${stop_script}
    echo "sudo echo Need SU passwd: " >>${stop_script}
    echo "" >>${stop_script}

    # first bridge
    ethdev_select
    echo "sudo ovs-vsctl add-br $brName 2>/dev/null" >>${start_script}
    echo "sudo ovs-vsctl add-port $brName $ethdev" >>${start_script}
    echo "sudo ifconfig $ethdev 0" >>${start_script}
    echo "sudo ifconfig $brName $ethdevip netmask $netmask" >>${start_script}
    if [ ! -z $gateway ]
    then
	echo "sudo route add default gw $gateway" >>${start_script}
    fi

    echo "sudo ifconfig $brName 0" >>${stop_script}
    echo "sudo ovs-vsctl del-port $ethdev" >>${stop_script}
    echo "sudo ovs-vsctl del-br $brName" >>${stop_script}
    echo "sudo ifconfig $ethdev $ethdevip netmask $netmask" >>${stop_script}
    if [ ! -z $gateway ]
    then
	echo "sudo route add default gw $gateway" >>${stop_script}
    fi

    # second bridge
    ethdev_select_2
    echo ""  >>${start_script}
    echo "sudo ovs-vsctl add-br $brName2 2>/dev/null" >>${start_script}
    echo "sudo ovs-vsctl add-port $brName2 $ethdev2" >>${start_script}
    echo "sudo ifconfig $ethdev2 0" >>${start_script}
    echo "sudo ifconfig $brName2 $ethdevip2 netmask $netmask" >>${start_script}
    if [ ! -z $gateway ]
    then
	echo "sudo route add default gw $gateway" >>${start_script}
    fi

    echo "" >>${stop_script}
    echo "sudo ifconfig $brName2 0" >>${stop_script}
    echo "sudo ovs-vsctl del-port $ethdev2" >>${stop_script}
    echo "sudo ovs-vsctl del-br $brName2" >>${stop_script}
    echo "sudo ifconfig $ethdev2 $ethdevip2 netmask $netmask" >>${stop_script}
    if [ ! -z $gateway ]
    then
	echo "sudo route add default gw $gateway" >>${stop_script}
    fi
    
    # changing execute permission
    chmod +x ${start_script} ${stop_script}
    
    echo "Start & stop scripts created."
}

echo "How many Open vSwitch Bridge that you want to set ?"
echo "[1]: Set only one."
echo "[2]: Set two bridges."
printf "Input: "
read num_br
case $num_br in
    1)
	check_ovs
	ethdev_select
	start_n_stop
	exit
	;;
    2)
	check_ovs
	start_n_stop_2
	exit
	;;
    *)
	echo "Do nothing. Please input 1 or 2."
	exit
	;;
esac
